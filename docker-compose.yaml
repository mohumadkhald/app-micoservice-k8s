version: '3.9'

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/


  config-server:
    image: mohumadkhald/config-server
    container_name: config-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-I", "http://config-server:8888"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 8888:8888

  discovery-server:
    image: mohumadkhald/service-registry
    container_name: discovery-server
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - 8761:8761

  job-service:
    image: mohumadkhald/job-service
    container_name: job-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker,mysql
    ports:
      - 8081:8081

  company-service:
    image: mohumadkhald/company-service
    container_name: company-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker,postgres

    ports:
      - 8082:8082



  review-service:
    image: mohumadkhald/review-service
    container_name: review-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker,postgres

    ports:
      - 8083:8083



  api-gateway:
    image: mohumadkhald/gateway
    container_name: api-gateway
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy

    ports:
      - 8080:8080

  tracing-server:
    image: openzipkin/zipkin
    container_name: tracing-server
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    ports:
      - 9411:9411

  admin-server:
    image: mohumadkhald/admin-server
    container_name: admin-server
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy

    ports:
      - 9090:9090







#  jop-app:
#    image: mohumadkhald/jobapp:1.0
#    container_name: jobapp
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    networks:
#      - postgres_network
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker




  mydb-mariadb:
    image: mariadb:latest
    container_name: mydb-mariadb
    environment:
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${MYSQL_USER}
      MARIADB_PASSWORD: ${MYSQL_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mydb-data:/var/lib/mysql
    ports:
      - "3306:3306"


  phpmyadmin:
    image: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mydb-mariadb
      PMA_PORT: 3306
      # PMA_USER: ${MYSQL_USER}
      # PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8000:80"
    depends_on:
      - mydb-mariadb
      - tracing-server

  # PostgreSQL container configuration
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
      - rabbitmq

# Volumes and Networks
volumes:
  postgres_data:
  rabbitmq_data:
  mydb-data:

networks:
  postgres_network:
    driver: bridge


#volumes:
#  postgres_data:
#  rabbitmq_data:
#
#networks:
#  postgres_network:
#    driver: bridge



#  postgres:
#    image: postgres:13
#    container_name: postgres_db
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: admin
#      POSTGRES_DB: mydb
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#
#
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: admin
#    ports:
#      - "5050:80"
#    depends_on:
#      - postgres
#







