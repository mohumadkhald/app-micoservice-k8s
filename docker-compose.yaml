version: '3.9'

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - postgres_network


  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - postgres_network

  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postgres_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - postgres_network










  config-server:
    image: mohumadkhald/config-server
    container_name: config-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-I", "http://config-server:8888"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - 8888:8888

  discovery-server:
    image: mohumadkhald/service-registry
    container_name: discovery-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://discovery-server:8761"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - 8761:8761

  job-service:
    image: mohumadkhald/job-service
    container_name: job-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - 8081:8081

  company-service:
    image: mohumadkhald/company-service
    container_name: job-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - 8082:8082



  review-service:
    image: mohumadkhald/review-service
    container_name: job-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - 8083:8083






















  jop-app:
    image: mohumadkhald/jobapp:1.0
    container_name: jobapp
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - postgres_network
    environment:
      - SPRING_PROFILES_ACTIVE=docker

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  postgres_network:
    driver: bridge
